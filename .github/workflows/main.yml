name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black pytest dvc[all] mlflow

    - name: Auto-format with black
      run: |
        black .

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

    - name: Run unit tests
      run: |
        pytest

    - name: Set up SSH for DVC
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

    - name: Run DVC pipeline
      run: |
        dvc pull
        dvc repro
        echo "âœ… DVC pipeline executed"

    - name: Sync DVC metrics to MLflow
      run: |
        export MLFLOW_TRACKING_URI=http://18.206.169.206:5000
        export MLFLOW_EXPERIMENT_NAME=LoanDefaultDVC

        python <<EOF
        import mlflow
        import json
        import os

        mlflow.set_tracking_uri(os.environ["MLFLOW_TRACKING_URI"])
        mlflow.set_experiment(os.environ["MLFLOW_EXPERIMENT_NAME"])

        with mlflow.start_run():
            with open("metrics.json") as f:
                metrics = json.load(f)
            for k, v in metrics.items():
                mlflow.log_metric(k, v)
        EOF

    - name: Upload trained model artifact
      uses: actions/upload-artifact@v4
      with:
        name: trained-model
        path: models/best_model.pkl  # Update if different

    - name: Build Docker image
      run: docker build -t loan-default-app .

    - name: Deploy to remote server
      if: github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.SERVER_SSH_KEY }}" > key.pem
        chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@18.206.169.206 '
          cd loan-default-mlops &&
          git pull &&
          docker compose down &&
          docker compose up --build -d
        '

