version: "3.8"

services:
  api:
    image: python:3.12-slim
    container_name: loan_api
    working_dir: /app
    command: >
      sh -c "pip install --upgrade pip &&
             pip install -r requirements.txt &&
             uvicorn src.api.api:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ..:/app
    depends_on:
      - mlflow
    networks:
      - mlops_net
    restart: unless-stopped

  trainer:
    image: python:3.12-slim
    container_name: loan_trainer
    working_dir: /app
    command: >
      sh -c "pip install --upgrade pip &&
             pip install -r requirements.txt &&
             echo 'Use the DVC container for pipeline execution'"
    volumes:
      - ..:/app
    networks:
      - mlops_net
    restart: unless-stopped
  dvc:
    image: python:3.12-slim
    container_name: loan_dvc
    working_dir: /app
    stdin_open: true
    tty: true
    entrypoint: sh -c
    command: >
      pip install --upgrade pip &&
      pip install 'dvc[all]' &&
      dvc init --no-scm &&
      dvc remote add -f -d storage .dvc/storage &&
      dvc repro &&
      echo 'âœ… DVC pipeline executed successfully' &&
      tail -f /dev/null
    volumes:
      - ..:/app
    networks:
      - mlops_net
    restart: unless-stopped


  streamlit:
    image: python:3.12-slim
    container_name: loan_streamlit
    working_dir: /app
    command: >
      sh -c "apt-get update &&
             apt-get install -y libglib2.0-0 libsm6 libxrender1 libxext6 libjpeg-dev &&
             pip install --upgrade pip &&
             pip install -r requirements.txt &&
             streamlit run streamlit_app.py --server.port=8501 --server.address=0.0.0.0"
    ports:
      - "8501:8501"
    volumes:
      - ..:/app
    depends_on:
      - api
    networks:
      - mlops_net
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: loan_mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
    command: >
      mlflow server
      --backend-store-uri sqlite:///mlflow/mlflow.db
      --default-artifact-root /mlflow/artifacts
      --host 0.0.0.0
    volumes:
      - ../mlflow:/mlflow
      - ../mlruns:/mlruns
    networks:
      - mlops_net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: loan_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mlops_net
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: loan_grafana
    ports:
      - "3000:3000"
    networks:
      - mlops_net
    restart: unless-stopped

  jupyter:
    image: python:3.12-slim
    container_name: loan_jupyter
    working_dir: /app
    ports:
      - "8888:8888"
    command: >
      sh -c "pip install --upgrade pip &&
             pip install jupyter &&
             jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''"
    volumes:
      - ..:/app
    networks:
      - mlops_net
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - mlops_net
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - mlops_net
    restart: unless-stopped

networks:
  mlops_net:
    driver: bridge

